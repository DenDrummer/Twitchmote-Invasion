<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///vars for cheats
spawnBits = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///spawn player
var spawn = obj_playerSpawn;
if(!instance_exists(obj_player))
{
    if(instance_exists(spawn))
    {
        var spawner = instance_find(spawn, instance_number(spawn));
    }
    else
    {
        player = instance_create(room_width/2, room_height/2, obj_player);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///start spawntimer
alarm[0] = clamp(room_speed / 2 - score/100, 1, room_speed / 2);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///calc total tier weight
totalWeight = T1W + T2W + T3W + T4W;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset timer and randomly spawn enemies

//reset timer
alarm[0] = clamp(room_speed / 2 - score/100, 1, room_speed / 2)

//whether or not an enemy spawns
if(random(clamp(5 - score / 1000, 1, 5)) &lt; 1 &amp;&amp; instance_number(obj_enemy) &lt; MAX_ENEMY)
{
    //if no enemy spawnpoint exists
    if (!instance_exists(obj_emoteSpawn))
    {
        //choose from which side the emote spawns
        var side = random(5);
        var spawnX, spawnY;
        if(side&lt;1)
        {
            spawnX = random(room_width + 100) - 50;
            spawnY = -50;
        }
        else if(side&lt;2)
        {
            spawnX = -50;
            spawnY = random(room_height + 100) - 50;
        }
        else if(side&lt;3)
        {
            spawnX = random(room_width + 100) - 50;
            spawnY = room_height + 50;
        }
        else //if(side&lt;4)
        {
            spawnX = room_width + 50;
            spawnY = random(room_height + 100) - 50;
        }
    }
    else //if enemy spawnpoint exists
    {
        //pick a random spawnpoint
        var spawner = instance_find(obj_emoteSpawn,floor(random(instance_number(obj_emoteSpawn))));
        spawnX = spawner.x;
        spawnY = spawner.y;
    }
    
    //choose which tier of enemy spawns
    var rand = random(totalWeight);
    var obj;
    if(rand &lt; T1W)
    {
        obj = obj_enemy1;
    }
    else if (rand &lt; T1W + T2W)
    {
        obj = obj_enemy2;
    }
    else if (rand &lt; T1W + T2W + T3W)
    {
        obj = obj_enemy3;
    }
    else
    {
        obj = obj_enemy4;
    }
    
    //spawn it
    instance_create(spawnX, spawnY, obj);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///special keys
if (keyboard_check(ord('R')))
{
    room_restart();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cheats
if(CHEATS)
{
    //raise score
    if(keyboard_check_pressed(ord('S')))
    {
        score += 100;
    }
    
    //clear high score
    if(keyboard_check_pressed(ord('C')))
    {
        global.highScore = 0;
    }
    
    //spawn bit of worth 1
    if(keyboard_check_pressed(ord('B')))
    {
        spawnBits = !spawnBits;
    }
    
    if (spawnBits)
    {
        with(instance_create(mouse_x, mouse_y, obj_bit))
        {
            worth = irandom(20);
            speed = 1;
            direction = random(360);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy grid
ds_grid_destroy(global.grid);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset maze

//destroy previous maze
while(instance_exists(obj_wall))
{
    instance_destroy(instance_find(obj_wall, 0));
}

//create new maze
scr_createMaze();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset player location &amp; score
if(instance_exists(obj_playerSpawn))
{
    var inst = instance_find(obj_playerSpawn, floor(random(instance_number(obj_playerSpawn))));
    player.x = inst.x;
    player.y = inst.y;
}
else
{
    player.x = room_width / 2;
    player.y = room_height / 2;
}
score = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw score and highscore
if(view_current == 0)
{
    draw_set_font(fnt_score);
    draw_set_colour($000000);
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    
    var scoreX = clamp(view_xview[0] + 5, 20, room_width);
    var scoreY = clamp(view_yview[0], 16, room_height);
    var scoreText = "score: " + string(score) +
                    "#highscore: " + string(global.highScore); 
    draw_text( scoreX, scoreY, scoreText);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>224</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_another_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>11</kind>
            <room>rm_menuMain</room>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
